name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Default permissions are read-only
permissions: read-all

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # For PR comments
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, zip, intl, json, curl
          tools: phpcs, phpstan, php-cs-fixer
          coverage: none
          
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
            
      - name: Install dependencies
        run: |
          if [ -f "composer.json" ]; then
            composer update --prefer-dist --no-progress
          fi

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: error

      - name: Run shfmt
        uses: luizm/action-sh-checker@v0.5.0
        env:
          SHFMT_OPTS: -i 2 -ci -bn
        with:
          sh_checker_comment: true
          sh_checker_exclude: vendor

      - name: Run PHP_CodeSniffer
        run: |
          if [ -f "vendor/bin/phpcs" ]; then
            vendor/bin/phpcs --standard=PSR12 wp-social-auth.php src/ || echo "PHP_CodeSniffer found issues but continuing"
          else
            echo "PHP_CodeSniffer not found, skipping check" 
          fi
        continue-on-error: true

      - name: Run PHPStan
        run: |
          if [ -f "vendor/bin/phpstan" ]; then
            vendor/bin/phpstan analyse --level=5 wp-social-auth.php src/ || echo "PHPStan found issues but continuing"
          else
            echo "PHPStan not found, skipping check"
          fi
        continue-on-error: true

      - name: Run PHP-CS-Fixer
        run: |
          if [ -f "vendor/bin/php-cs-fixer" ] && [ -f ".php-cs-fixer.dist.php" ]; then
            vendor/bin/php-cs-fixer fix wp-social-auth.php src/ --dry-run --diff --config=.php-cs-fixer.dist.php || echo "PHP-CS-Fixer found issues but continuing"
          else
            echo "PHP-CS-Fixer or config not found, skipping check"
          fi
        continue-on-error: true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: none
          tools: none

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: php
          config-file: ./.github/codeql/codeql-config.yml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:php"

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: security-scan
    permissions:
      contents: read
      actions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: wordpress-gmail-cli:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Make scripts executable
        run: chmod +x bin/*.sh

      - name: Test Docker image
        run: bin/test-docker.sh

      - name: Test shell scripts
        run: bin/test-scripts.sh