name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpcs, phpstan
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: |
          npm install -g shellcheck
          
      - name: Lint PHP files
        run: |
          phpcs --standard=PSR12 wp-social-auth.php
          
      - name: Lint Shell scripts
        run: |
          shellcheck *.sh
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
      - name: Run SAST scan
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: wordpress-gmail-cli:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Docker image
        run: |
          docker run --rm wordpress-gmail-cli:test /bin/bash -c "shellcheck *.sh"
          
  slsa-generator:
    name: SLSA provenance generation
    runs-on: ubuntu-latest
    needs: build
    permissions:
      actions: read
      id-token: write
      contents: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Generate provenance
        uses: slsa-framework/slsa-github-generator@v1.4.0
        with:
          base64-subjects: ${{ needs.build.outputs.hashes }}
          upload-assets: true
          
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, slsa-generator]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore: release')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract version from commit message
        id: version
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oP 'release v\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/wordpress-gmail-cli:latest
            ghcr.io/${{ github.repository_owner }}/wordpress-gmail-cli:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          generate_release_notes: true
          files: |
            wordpress-gmail-cli.sh
            wp-social-auth.php
            enhance-ssl-security.sh
            get-gmail-credentials.sh
