name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Default permissions are read-only
permissions: read-all

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: phpcs, phpstan

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install -g shellcheck

      - name: Lint PHP files (informational only)
        run: |
          phpcs --standard=PSR12 wp-social-auth.php || true

      - name: Lint Shell scripts (informational only)
        run: |
          shellcheck *.sh || true

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ShellCheck (informational only)
        uses: ludeeus/action-shellcheck@master
        continue-on-error: true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Run SAST scan
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        continue-on-error: true

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: security-scan
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: wordpress-gmail-cli:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image (informational only)
        run: |
          docker run --rm wordpress-gmail-cli:test --help || true
        continue-on-error: true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      packages: write
    if: >
      github.event_name == 'push' &&
      github.ref == 'refs/heads/main' &&
      contains(github.event.head_commit.message, 'chore: release')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from commit message
        id: version
        run: |
          # Safely extract version using GitHub's built-in expression syntax
          if [[ "${{ github.event.head_commit.message }}" =~ release\ v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION="${BASH_REMATCH[1]}"
            # Validate that VERSION is a valid semantic version
            if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "version=$VERSION" >> $GITHUB_OUTPUT
            else
              echo "Invalid version format" >&2
              exit 1
            fi
          else
            echo "No version found in commit message" >&2
            echo "version=0.0.0" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/wordpress-gmail-cli:latest
            ghcr.io/${{ github.repository_owner }}/wordpress-gmail-cli:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          generate_release_notes: true
          files: |
            wordpress-gmail-cli.sh
            wp-social-auth.php
            enhance-ssl-security.sh
            get-gmail-credentials.sh
