name: Security Scan

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.gitignore'
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight UTC
  workflow_dispatch:

# Default permissions are read-only
permissions: read-all

jobs:
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          # Only report actual errors (exit code != 0 from shellcheck)
          severity: error

  trivy-scan:
    name: Trivy Vulnerability Scan (Container)
    runs-on: ubuntu-latest
    permissions:
      contents: read          # To checkout code and build image
      security-events: write  # To upload SARIF results
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # REQUIRED step before building
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for scanning
        # No need to push, just load locally for Trivy
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: wordpress-gmail-cli:scan # Use a distinct tag for clarity

      # Check if Dockerfile exists
      - name: Check if Dockerfile exists
        id: check_dockerfile
        run: |
          if [ -f "Dockerfile" ]; then
            echo "dockerfile_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dockerfile_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Trivy vulnerability scanner
        if: steps.check_dockerfile.outputs.dockerfile_exists == 'true'
        uses: aquasecurity/trivy-action@0.30.0 # PINNED VERSION
        with:
          image-ref: 'wordpress-gmail-cli:scan'
          # Output as SARIF for upload
          format: 'sarif'
          output: 'trivy-results.sarif'
          # Fail if CRITICAL or HIGH severity vulnerabilities are found
          exit-code: '0'  # Changed to non-failing to ensure workflow continues
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      # Upload results to GitHub Security tab
      - name: Upload Trivy scan results
        if: steps.check_dockerfile.outputs.dockerfile_exists == 'true' && (success() || failure())
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy'

  secret-scan:
    name: Secret Scanning (TruffleHog)
    runs-on: ubuntu-latest
    permissions:
      contents: read          # REQUIRED for checkout
      security-events: write  # Potentially needed to upload results
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for better comparison/scanning
          fetch-depth: 0

      - name: Run TruffleHog OSS Scan
        uses: trufflesecurity/trufflehog@v3.88.30 # Version pinned
        with:
          path: ./ # Scan the entire repo
          # Use filesystem scan rather than git scan to avoid BASE/HEAD comparison issues
          extra_args: --debug --only-verified
          # Remove base and head comparison which was causing errors when they're the same

  composer-audit:
    name: PHP Dependency Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read          # REQUIRED for checkout
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if composer.json exists
        id: check_composer
        run: |
          if [ -f "composer.json" ]; then
            echo "composer_exists=true" >> $GITHUB_OUTPUT
          else
            echo "composer_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup PHP
        if: steps.check_composer.outputs.composer_exists == 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Get Composer cache directory
        if: steps.check_composer.outputs.composer_exists == 'true'
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        if: steps.check_composer.outputs.composer_exists == 'true'
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        if: steps.check_composer.outputs.composer_exists == 'true'
        run: composer update --prefer-dist --no-progress --with-all-dependencies

      - name: Run Composer Audit
        if: steps.check_composer.outputs.composer_exists == 'true'
        run: composer audit